services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=your-super-secret-key-change-this
      - DATABASE_URL=postgresql://postgres:password@db:5432/mermaid_converter
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads  # For any file uploads
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mermaid_converter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"  # Expose for local development access
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: initial schema
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mermaid_converter"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: Database administration tool
  adminer:
    image: adminer:4.8.1
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
